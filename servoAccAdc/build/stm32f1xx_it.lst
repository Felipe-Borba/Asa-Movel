ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB66:
  25              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f1xx_it.c **** 
  28:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f1xx_it.c **** 
  31:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f1xx_it.c **** 
  33:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 2


  34:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f1xx_it.c ****  
  36:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f1xx_it.c **** 
  38:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f1xx_it.c **** 
  41:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f1xx_it.c **** 
  51:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  61:Src/stm32f1xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  63:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  64:Src/stm32f1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  65:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  66:Src/stm32f1xx_it.c **** 
  67:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  68:Src/stm32f1xx_it.c **** 
  69:Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  71:Src/stm32f1xx_it.c **** /******************************************************************************/
  72:Src/stm32f1xx_it.c **** /**
  73:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Src/stm32f1xx_it.c ****   */
  75:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  76:Src/stm32f1xx_it.c **** {
  26              		.loc 1 76 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  77:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Src/stm32f1xx_it.c **** 
  79:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Src/stm32f1xx_it.c **** }
  31              		.loc 1 83 0
  32 0000 7047     		bx	lr
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 3


  33              		.cfi_endproc
  34              	.LFE66:
  36              		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	1
  38              		.global	HardFault_Handler
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HardFault_Handler:
  45              	.LFB67:
  84:Src/stm32f1xx_it.c **** 
  85:Src/stm32f1xx_it.c **** /**
  86:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Src/stm32f1xx_it.c ****   */
  88:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  89:Src/stm32f1xx_it.c **** {
  46              		.loc 1 89 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE67:
  57              		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	MemManage_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	MemManage_Handler:
  66              	.LFB68:
  90:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Src/stm32f1xx_it.c ****   while (1)
  94:Src/stm32f1xx_it.c ****   {
  95:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f1xx_it.c ****   }
  98:Src/stm32f1xx_it.c **** }
  99:Src/stm32f1xx_it.c **** 
 100:Src/stm32f1xx_it.c **** /**
 101:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f1xx_it.c ****   */
 103:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f1xx_it.c **** {
  67              		.loc 1 104 0
  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 4


  73              	.L5:
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE68:
  78              		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	BusFault_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	BusFault_Handler:
  87              	.LFB69:
 105:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f1xx_it.c **** 
 107:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f1xx_it.c ****   while (1)
 109:Src/stm32f1xx_it.c ****   {
 110:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f1xx_it.c ****   }
 113:Src/stm32f1xx_it.c **** }
 114:Src/stm32f1xx_it.c **** 
 115:Src/stm32f1xx_it.c **** /**
 116:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Src/stm32f1xx_it.c ****   */
 118:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f1xx_it.c **** {
  88              		.loc 1 119 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.L7:
  95 0000 FEE7     		b	.L7
  96              		.cfi_endproc
  97              	.LFE69:
  99              		.section	.text.UsageFault_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	UsageFault_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	UsageFault_Handler:
 108              	.LFB70:
 120:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Src/stm32f1xx_it.c **** 
 122:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****   while (1)
 124:Src/stm32f1xx_it.c ****   {
 125:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f1xx_it.c ****   }
 128:Src/stm32f1xx_it.c **** }
 129:Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 5


 130:Src/stm32f1xx_it.c **** /**
 131:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f1xx_it.c ****   */
 133:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f1xx_it.c **** {
 109              		.loc 1 134 0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.L9:
 116 0000 FEE7     		b	.L9
 117              		.cfi_endproc
 118              	.LFE70:
 120              		.section	.text.SVC_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	SVC_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	SVC_Handler:
 129              	.LFB71:
 135:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f1xx_it.c **** 
 137:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f1xx_it.c ****   while (1)
 139:Src/stm32f1xx_it.c ****   {
 140:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f1xx_it.c ****   }
 143:Src/stm32f1xx_it.c **** }
 144:Src/stm32f1xx_it.c **** 
 145:Src/stm32f1xx_it.c **** /**
 146:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Src/stm32f1xx_it.c ****   */
 148:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 149:Src/stm32f1xx_it.c **** {
 130              		.loc 1 149 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Src/stm32f1xx_it.c **** 
 152:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Src/stm32f1xx_it.c **** 
 155:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Src/stm32f1xx_it.c **** }
 135              		.loc 1 156 0
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE71:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 6


 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	DebugMon_Handler:
 149              	.LFB72:
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
 159:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 150              		.loc 1 162 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 155              		.loc 1 169 0
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE72:
 160              		.section	.text.PendSV_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	PendSV_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	PendSV_Handler:
 169              	.LFB73:
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
 172:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 170              		.loc 1 175 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 175              		.loc 1 182 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 7


 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE73:
 180              		.section	.text.SysTick_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	SysTick_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	SysTick_Handler:
 189              	.LFB74:
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 190              		.loc 1 188 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI0:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   HAL_IncTick();
 199              		.loc 1 192 0
 200 0002 FFF7FEFF 		bl	HAL_IncTick
 201              	.LVL0:
 193:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Src/stm32f1xx_it.c **** 
 195:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Src/stm32f1xx_it.c **** }
 202              		.loc 1 196 0
 203 0006 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE74:
 207              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 208              		.align	1
 209              		.global	DMA1_Channel1_IRQHandler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu softvfp
 215              	DMA1_Channel1_IRQHandler:
 216              	.LFB75:
 197:Src/stm32f1xx_it.c **** 
 198:Src/stm32f1xx_it.c **** /******************************************************************************/
 199:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 200:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 8


 203:Src/stm32f1xx_it.c **** /******************************************************************************/
 204:Src/stm32f1xx_it.c **** 
 205:Src/stm32f1xx_it.c **** /**
 206:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 207:Src/stm32f1xx_it.c ****   */
 208:Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 209:Src/stm32f1xx_it.c **** {
 217              		.loc 1 209 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 210:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 211:Src/stm32f1xx_it.c **** 
 212:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 213:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 226              		.loc 1 213 0
 227 0002 0248     		ldr	r0, .L17
 228 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 229              	.LVL1:
 214:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 215:Src/stm32f1xx_it.c **** 
 216:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 217:Src/stm32f1xx_it.c **** }
 230              		.loc 1 217 0
 231 0008 08BD     		pop	{r3, pc}
 232              	.L18:
 233 000a 00BF     		.align	2
 234              	.L17:
 235 000c 00000000 		.word	hdma_adc1
 236              		.cfi_endproc
 237              	.LFE75:
 239              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 240              		.align	1
 241              		.global	ADC1_2_IRQHandler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu softvfp
 247              	ADC1_2_IRQHandler:
 248              	.LFB76:
 218:Src/stm32f1xx_it.c **** 
 219:Src/stm32f1xx_it.c **** /**
 220:Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 221:Src/stm32f1xx_it.c ****   */
 222:Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 223:Src/stm32f1xx_it.c **** {
 249              		.loc 1 223 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 08B5     		push	{r3, lr}
 254              	.LCFI2:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 9


 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 3, -8
 257              		.cfi_offset 14, -4
 224:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 225:Src/stm32f1xx_it.c **** 
 226:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 227:Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 258              		.loc 1 227 0
 259 0002 0248     		ldr	r0, .L21
 260 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 261              	.LVL2:
 228:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 229:Src/stm32f1xx_it.c **** 
 230:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 231:Src/stm32f1xx_it.c **** }
 262              		.loc 1 231 0
 263 0008 08BD     		pop	{r3, pc}
 264              	.L22:
 265 000a 00BF     		.align	2
 266              	.L21:
 267 000c 00000000 		.word	hadc1
 268              		.cfi_endproc
 269              	.LFE76:
 271              		.section	.text.USB_HP_CAN1_TX_IRQHandler,"ax",%progbits
 272              		.align	1
 273              		.global	USB_HP_CAN1_TX_IRQHandler
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	USB_HP_CAN1_TX_IRQHandler:
 280              	.LFB77:
 232:Src/stm32f1xx_it.c **** 
 233:Src/stm32f1xx_it.c **** /**
 234:Src/stm32f1xx_it.c ****   * @brief This function handles USB high priority or CAN TX interrupts.
 235:Src/stm32f1xx_it.c ****   */
 236:Src/stm32f1xx_it.c **** void USB_HP_CAN1_TX_IRQHandler(void)
 237:Src/stm32f1xx_it.c **** {
 281              		.loc 1 237 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 3, -8
 289              		.cfi_offset 14, -4
 238:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN1_TX_IRQn 0 */
 239:Src/stm32f1xx_it.c **** 
 240:Src/stm32f1xx_it.c ****   /* USER CODE END USB_HP_CAN1_TX_IRQn 0 */
 241:Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 290              		.loc 1 241 0
 291 0002 0248     		ldr	r0, .L25
 292 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 293              	.LVL3:
 242:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN1_TX_IRQn 1 */
 243:Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 10


 244:Src/stm32f1xx_it.c ****   /* USER CODE END USB_HP_CAN1_TX_IRQn 1 */
 245:Src/stm32f1xx_it.c **** }
 294              		.loc 1 245 0
 295 0008 08BD     		pop	{r3, pc}
 296              	.L26:
 297 000a 00BF     		.align	2
 298              	.L25:
 299 000c 00000000 		.word	hpcd_USB_FS
 300              		.cfi_endproc
 301              	.LFE77:
 303              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 304              		.align	1
 305              		.global	USB_LP_CAN1_RX0_IRQHandler
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	USB_LP_CAN1_RX0_IRQHandler:
 312              	.LFB78:
 246:Src/stm32f1xx_it.c **** 
 247:Src/stm32f1xx_it.c **** /**
 248:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 249:Src/stm32f1xx_it.c ****   */
 250:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 251:Src/stm32f1xx_it.c **** {
 313              		.loc 1 251 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 252:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 253:Src/stm32f1xx_it.c **** 
 254:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 255:Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 322              		.loc 1 255 0
 323 0002 0248     		ldr	r0, .L29
 324 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 325              	.LVL4:
 256:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 257:Src/stm32f1xx_it.c **** 
 258:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 259:Src/stm32f1xx_it.c **** }
 326              		.loc 1 259 0
 327 0008 08BD     		pop	{r3, pc}
 328              	.L30:
 329 000a 00BF     		.align	2
 330              	.L29:
 331 000c 00000000 		.word	hpcd_USB_FS
 332              		.cfi_endproc
 333              	.LFE78:
 335              		.section	.text.TIM1_BRK_IRQHandler,"ax",%progbits
 336              		.align	1
 337              		.global	TIM1_BRK_IRQHandler
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 11


 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	TIM1_BRK_IRQHandler:
 344              	.LFB79:
 260:Src/stm32f1xx_it.c **** 
 261:Src/stm32f1xx_it.c **** /**
 262:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 break interrupt.
 263:Src/stm32f1xx_it.c ****   */
 264:Src/stm32f1xx_it.c **** void TIM1_BRK_IRQHandler(void)
 265:Src/stm32f1xx_it.c **** {
 345              		.loc 1 265 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 08B5     		push	{r3, lr}
 350              	.LCFI5:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
 266:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 0 */
 267:Src/stm32f1xx_it.c **** 
 268:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 0 */
 269:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 354              		.loc 1 269 0
 355 0002 0248     		ldr	r0, .L33
 356 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 357              	.LVL5:
 270:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 1 */
 271:Src/stm32f1xx_it.c **** 
 272:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 1 */
 273:Src/stm32f1xx_it.c **** }
 358              		.loc 1 273 0
 359 0008 08BD     		pop	{r3, pc}
 360              	.L34:
 361 000a 00BF     		.align	2
 362              	.L33:
 363 000c 00000000 		.word	htim1
 364              		.cfi_endproc
 365              	.LFE79:
 367              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 368              		.align	1
 369              		.global	TIM1_UP_IRQHandler
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	TIM1_UP_IRQHandler:
 376              	.LFB80:
 274:Src/stm32f1xx_it.c **** 
 275:Src/stm32f1xx_it.c **** /**
 276:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 277:Src/stm32f1xx_it.c ****   */
 278:Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 279:Src/stm32f1xx_it.c **** {
 377              		.loc 1 279 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 12


 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 08B5     		push	{r3, lr}
 382              	.LCFI6:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 280:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 281:Src/stm32f1xx_it.c **** 
 282:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 283:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 386              		.loc 1 283 0
 387 0002 0248     		ldr	r0, .L37
 388 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 389              	.LVL6:
 284:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 285:Src/stm32f1xx_it.c **** 
 286:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 287:Src/stm32f1xx_it.c **** }
 390              		.loc 1 287 0
 391 0008 08BD     		pop	{r3, pc}
 392              	.L38:
 393 000a 00BF     		.align	2
 394              	.L37:
 395 000c 00000000 		.word	htim1
 396              		.cfi_endproc
 397              	.LFE80:
 399              		.section	.text.TIM1_TRG_COM_IRQHandler,"ax",%progbits
 400              		.align	1
 401              		.global	TIM1_TRG_COM_IRQHandler
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	TIM1_TRG_COM_IRQHandler:
 408              	.LFB81:
 288:Src/stm32f1xx_it.c **** 
 289:Src/stm32f1xx_it.c **** /**
 290:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts.
 291:Src/stm32f1xx_it.c ****   */
 292:Src/stm32f1xx_it.c **** void TIM1_TRG_COM_IRQHandler(void)
 293:Src/stm32f1xx_it.c **** {
 409              		.loc 1 293 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI7:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 294:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 0 */
 295:Src/stm32f1xx_it.c **** 
 296:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 0 */
 297:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 418              		.loc 1 297 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 13


 419 0002 0248     		ldr	r0, .L41
 420 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 421              	.LVL7:
 298:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 1 */
 299:Src/stm32f1xx_it.c **** 
 300:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 1 */
 301:Src/stm32f1xx_it.c **** }
 422              		.loc 1 301 0
 423 0008 08BD     		pop	{r3, pc}
 424              	.L42:
 425 000a 00BF     		.align	2
 426              	.L41:
 427 000c 00000000 		.word	htim1
 428              		.cfi_endproc
 429              	.LFE81:
 431              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 432              		.align	1
 433              		.global	TIM1_CC_IRQHandler
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	TIM1_CC_IRQHandler:
 440              	.LFB82:
 302:Src/stm32f1xx_it.c **** 
 303:Src/stm32f1xx_it.c **** /**
 304:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 305:Src/stm32f1xx_it.c ****   */
 306:Src/stm32f1xx_it.c **** void TIM1_CC_IRQHandler(void)
 307:Src/stm32f1xx_it.c **** {
 441              		.loc 1 307 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              	.LCFI8:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
 449              		.cfi_offset 14, -4
 308:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 309:Src/stm32f1xx_it.c **** 
 310:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 311:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 450              		.loc 1 311 0
 451 0002 0248     		ldr	r0, .L45
 452 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 453              	.LVL8:
 312:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 313:Src/stm32f1xx_it.c **** 
 314:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 315:Src/stm32f1xx_it.c **** }
 454              		.loc 1 315 0
 455 0008 08BD     		pop	{r3, pc}
 456              	.L46:
 457 000a 00BF     		.align	2
 458              	.L45:
 459 000c 00000000 		.word	htim1
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 14


 460              		.cfi_endproc
 461              	.LFE82:
 463              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 464              		.align	1
 465              		.global	TIM3_IRQHandler
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu softvfp
 471              	TIM3_IRQHandler:
 472              	.LFB83:
 316:Src/stm32f1xx_it.c **** 
 317:Src/stm32f1xx_it.c **** /**
 318:Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 319:Src/stm32f1xx_it.c ****   */
 320:Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 321:Src/stm32f1xx_it.c **** {
 473              		.loc 1 321 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 08B5     		push	{r3, lr}
 478              	.LCFI9:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 322:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 323:Src/stm32f1xx_it.c **** 
 324:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 325:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 482              		.loc 1 325 0
 483 0002 0248     		ldr	r0, .L49
 484 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 485              	.LVL9:
 326:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 327:Src/stm32f1xx_it.c **** 
 328:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 329:Src/stm32f1xx_it.c **** }
 486              		.loc 1 329 0
 487 0008 08BD     		pop	{r3, pc}
 488              	.L50:
 489 000a 00BF     		.align	2
 490              	.L49:
 491 000c 00000000 		.word	htim3
 492              		.cfi_endproc
 493              	.LFE83:
 495              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 496              		.align	1
 497              		.global	I2C1_EV_IRQHandler
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu softvfp
 503              	I2C1_EV_IRQHandler:
 504              	.LFB84:
 330:Src/stm32f1xx_it.c **** 
 331:Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 15


 332:Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 333:Src/stm32f1xx_it.c ****   */
 334:Src/stm32f1xx_it.c **** void I2C1_EV_IRQHandler(void)
 335:Src/stm32f1xx_it.c **** {
 505              		.loc 1 335 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509 0000 08B5     		push	{r3, lr}
 510              	.LCFI10:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 3, -8
 513              		.cfi_offset 14, -4
 336:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 337:Src/stm32f1xx_it.c **** 
 338:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 339:Src/stm32f1xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 514              		.loc 1 339 0
 515 0002 0248     		ldr	r0, .L53
 516 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 517              	.LVL10:
 340:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 341:Src/stm32f1xx_it.c **** 
 342:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 343:Src/stm32f1xx_it.c **** }
 518              		.loc 1 343 0
 519 0008 08BD     		pop	{r3, pc}
 520              	.L54:
 521 000a 00BF     		.align	2
 522              	.L53:
 523 000c 00000000 		.word	hi2c1
 524              		.cfi_endproc
 525              	.LFE84:
 527              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 528              		.align	1
 529              		.global	I2C1_ER_IRQHandler
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu softvfp
 535              	I2C1_ER_IRQHandler:
 536              	.LFB85:
 344:Src/stm32f1xx_it.c **** 
 345:Src/stm32f1xx_it.c **** /**
 346:Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 347:Src/stm32f1xx_it.c ****   */
 348:Src/stm32f1xx_it.c **** void I2C1_ER_IRQHandler(void)
 349:Src/stm32f1xx_it.c **** {
 537              		.loc 1 349 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 08B5     		push	{r3, lr}
 542              	.LCFI11:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 3, -8
 545              		.cfi_offset 14, -4
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 16


 350:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 351:Src/stm32f1xx_it.c **** 
 352:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 353:Src/stm32f1xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 546              		.loc 1 353 0
 547 0002 0248     		ldr	r0, .L57
 548 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 549              	.LVL11:
 354:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 355:Src/stm32f1xx_it.c **** 
 356:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 357:Src/stm32f1xx_it.c **** }
 550              		.loc 1 357 0
 551 0008 08BD     		pop	{r3, pc}
 552              	.L58:
 553 000a 00BF     		.align	2
 554              	.L57:
 555 000c 00000000 		.word	hi2c1
 556              		.cfi_endproc
 557              	.LFE85:
 559              		.text
 560              	.Letext0:
 561              		.file 2 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 562              		.file 3 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 563              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 564              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 565              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 566              		.file 7 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 567              		.file 8 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 568              		.file 9 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\lib
 569              		.file 10 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\ar
 570              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 571              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 572              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 573              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 574              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 575              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 576              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 577              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:16     .text.NMI_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:23     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:37     .text.HardFault_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:44     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:58     .text.MemManage_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:65     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:79     .text.BusFault_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:86     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:100    .text.UsageFault_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:107    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:121    .text.SVC_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:128    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:141    .text.DebugMon_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:148    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:161    .text.PendSV_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:168    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:181    .text.SysTick_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:188    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:208    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:215    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:235    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:240    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:247    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:267    .text.ADC1_2_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:272    .text.USB_HP_CAN1_TX_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:279    .text.USB_HP_CAN1_TX_IRQHandler:00000000 USB_HP_CAN1_TX_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:299    .text.USB_HP_CAN1_TX_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:304    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:311    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 USB_LP_CAN1_RX0_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:331    .text.USB_LP_CAN1_RX0_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:336    .text.TIM1_BRK_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:343    .text.TIM1_BRK_IRQHandler:00000000 TIM1_BRK_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:363    .text.TIM1_BRK_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:368    .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:375    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:395    .text.TIM1_UP_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:400    .text.TIM1_TRG_COM_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:407    .text.TIM1_TRG_COM_IRQHandler:00000000 TIM1_TRG_COM_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:427    .text.TIM1_TRG_COM_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:432    .text.TIM1_CC_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:439    .text.TIM1_CC_IRQHandler:00000000 TIM1_CC_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:459    .text.TIM1_CC_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:464    .text.TIM3_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:471    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:491    .text.TIM3_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:496    .text.I2C1_EV_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:503    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:523    .text.I2C1_EV_IRQHandler:0000000c $d
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:528    .text.I2C1_ER_IRQHandler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:535    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s:555    .text.I2C1_ER_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccNEJjNv.s 			page 18


hdma_adc1
HAL_ADC_IRQHandler
hadc1
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_TIM_IRQHandler
htim1
htim3
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
